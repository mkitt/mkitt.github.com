{
  "name": "mkitt.github.io",
  "description": "Matthew Kitt",
  "homepage": "https://mkitt.net/",
  "private": true,
  "version": "6.6.6",
  "license": "MIT",
  "scripts": {
    "build": "webpack --progress --colors && rm ./main.js",
    "start": "webpack-dev-server --progress --colors",
    "flow": "flow",
    "lint": "eslint src"
  },
  "dependencies": {
    "glamor": "3.0.0-1",
    "glamor-server": "3.0.0-1",
    "marked": "0.3.6",
    "react": "15.4.2",
    "react-dom": "15.4.2"
  },
  "devDependencies": {
    "babel-core": "6.24.0",
    "babel-eslint": "7.1.1",
    "babel-loader": "6.4.1",
    "babel-plugin-transform-flow-strip-types": "6.22.0",
    "babel-preset-es2015": "6.24.0",
    "babel-preset-react": "6.23.0",
    "babel-preset-stage-0": "6.22.0",
    "browser-sync": "2.18.8",
    "browser-sync-webpack-plugin": "1.1.4",
    "eslint": "3.18.0",
    "eslint-config-airbnb": "14.1.0",
    "eslint-loader": "1.6.3",
    "eslint-plugin-flowtype": "2.30.3",
    "eslint-plugin-import": "2.2.0",
    "eslint-plugin-jsx-a11y": "4.0.0",
    "eslint-plugin-react": "6.10.2",
    "flow-bin": "0.42.0",
    "json-loader": "0.5.4",
    "static-site-generator-webpack-plugin": "3.4.1",
    "webpack": "1.13.3",
    "webpack-dev-server": "1.16.2",
    "webpack-merge": "1.0.1"
  },
  "babel": {
    "presets": [
      "es2015",
      "stage-0",
      "react"
    ],
    "plugins": [
      "transform-flow-strip-types"
    ]
  },
  "eslintConfig": {
    "extends": "airbnb",
    "parser": "babel-eslint",
    "env": {
      "browser": true,
      "jest": true,
      "node": true
    },
    "rules": {
      "no-alert": 2,
      "no-console": 2,
      "no-debugger": 2,
      "semi": 0,
      "react/jsx-filename-extension": [
        1,
        {
          "extensions": [
            ".js",
            ".jsx"
          ]
        }
      ],
      "react/sort-comp": [
        "error",
        {
          "order": [
            "type-annotations",
            "static-methods",
            "lifecycle",
            "/^on.+$/",
            "/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/",
            "everything-else",
            "/^render.+$/",
            "render"
          ]
        }
      ]
    }
  }
}
